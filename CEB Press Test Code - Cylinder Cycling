/* Open Source Ecology CEB Press v19.01 with Arduino Uno or Mega as controller of choice.
 CC-BY-SA, GPLv3, and OSE License for Distributive Economics
 Use Mega to keep consistency with OSE D3D 3D Printer to minimize GVCS part count.
 Switches FET's HIGH/LOW to control two hydraulic solenoids,
 measures piston motion time relative to pressure sensor trigger,
 and repeats cycle while auto calibrating timing from previous cycles and startup positions.
 
 Extension time is measured. Orientation of machine is such that cylinder retracts to the right. 
 See sequence at http://bit.ly/2Hnuk6F
 
 Faults should be self-resolving based on pressing sequence: pressure trigger reverses direction 
 at fault point and no block results. There is one likely place for faults to occur: soil load into chamber.

 Uses HiLetgo Relay Shield 5V 4 Channel for Arduino:
 
 https://www.amazon.com/HiLetgo-Relay-Shield-Channel-Arduino/dp/B07F7Y55Z7/ref=sr_1_2?ie=UTF8&qid=1547696929&sr=8-2&keywords=hiletgo+relay+shield
 
 Note pins must be trimmed flat under Relay 1 connector and must be insulated to prevent shorts.
 
 Relay 1 is controlled by digital pin 7 - UP
 Relay 2 is controlled by digital pin 6 - DOWN
 Relay 3 is controlled by digital pin 5 - LEFT
 Relay 4 is controlled by digital pin 4 - RIGHT

 A high written to a pin turns the relay ON
 A low written to a pin turns the relay OFF
 
 Contributions by:
 Abe Anderson
 http://opensourceecology.org/wiki/AbeAnd_Log
 Marcin Jakubowski
 http://opensourceecology.org/wiki/Marcin_Log
  
 Unfamiliar with code structures? See https://www.arduino.cc/en/Reference/HomePage
 */

//defines to make it easier for non-coders to make adjustments for troubleshooting and custom changes

#define SOLENOID_UP 7         //Extension. See pin mapping above.
#define SOLENOID_DOWN 6       //swap these pin numbers for wire inversion  
#define SOLENOID_LEFT 5       //Extension.
#define SOLENOID_RIGHT 4      //swap these pin numbers for wire inversion     


void setup() {

  //initialize pin I/O Inputs and turn everything off to avoid startup glitches
  
  pinMode(SOLENOID_RIGHT, OUTPUT);
  digitalWrite(SOLENOID_RIGHT, LOW);
  pinMode(SOLENOID_LEFT, OUTPUT);
  digitalWrite(SOLENOID_LEFT, LOW);
  pinMode(SOLENOID_DOWN, OUTPUT);
  digitalWrite(SOLENOID_DOWN, LOW);
  pinMode(SOLENOID_UP, OUTPUT);
  digitalWrite(SOLENOID_UP, LOW);

}

void loop() {


                                        
    digitalWrite(SOLENOID_UP, HIGH);
    delay(1000); 
    digitalWrite(SOLENOID_UP, LOW);
    delay(1000);
    digitalWrite(SOLENOID_DOWN, HIGH);
    delay(1000); 
    digitalWrite(SOLENOID_DOWN, LOW);
    delay(1000);
    digitalWrite(SOLENOID_LEFT, HIGH);
    delay(1000); 
    digitalWrite(SOLENOID_LEFT, LOW);
    delay(1000);
    digitalWrite(SOLENOID_RIGHT, HIGH);
    delay(1000); 
    digitalWrite(SOLENOID_RIGHT, LOW);
    delay(1000);
 
    
  }
  
